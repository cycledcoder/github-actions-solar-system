name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }} 

    
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20
    
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: ${{ always() }}   
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    

    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup Up NodeJS - 20
          uses: actions/setup-node@v4
          with:
            node-version: 20
        
        - name: Install Dependencies
          run: npm install

        - name: Code Coverage
          continue-on-error: true
          run: npm run coverage

        - name: Upload Coverage
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage-Result
            retention-days: 5
            path: coverage
    docker:
        name: Containerization
        needs: [unit-testing, code-coverage]
        permissions:
          packages: write
        runs-on: ubuntu-latest
        steps:
          - run: echo ${{ github.event.release.tag_name }}
          - name: Checkout Repository
            uses: actions/checkout@v4

          - name: GitHub Container Registry Login
            uses: docker/login-action@v3
            with:
              registry: ghcr.io
              username: ${{ github.repository_owner }}
              password: ${{ secrets.GITHUB_TOKEN }}

          - name: Build Docker Image For Test
            uses: docker/build-push-action@v6
            with:
              context: .
              push: false
              tags: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}

          - name: Test Docker Image
            run: |
              docker images
              docker run --name solar-system-app -d \
                -p 3000:3000 \
                -e MONGO_URI=$MONGO_URI \
                -e MONGO_USERNAME=$MONGO_USERNAME \
                -e MONGO_PASSWORD=$MONGO_PASSWORD \
                ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}

              echo Testing Image URL using wget
              wget -q -O - 127.0.0.1:3000/live | grep live

          - name: Push Docker Image
            uses: docker/build-push-action@v6
            with:
              context: .
              push: true
              tags: |
                ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}

    dev-deploy:
        runs-on: ubuntu-latest 
        needs: [docker]
        environment: development
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4

          - name: install kubectl
            uses: azure/setup-kubectl@v4
            with:
               version: 'v1.26.0' 
            id: install

          - uses: azure/k8s-set-context@v4
            name: set k8 context
            with:
               method: kubeconfig
               kubeconfig: ${{ secrets.KUBECONFIG }} 

          - name: check k8s setup
            run: kubectl version --short -o yaml